local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "🍜 Kohau Radar",
   LoadingTitle = "Loading Kohau Radar...",
   LoadingSubtitle = "by Carl Johnson",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = "KohauRadar",
      FileName = "Config"
   },
   KeySystem = true,
   KeySettings = {
      Title = "Kohau Radar",
      Subtitle = "Enter Key",
      Note = "https://discord.gg/ktf43VhHf2",
      FileName = "KohauKey",
      SaveKey = true,
      Key = {"kohausucks", "kohausux"}
   }
})

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

local ADMIN_RANKS = {
    ["Hibachi Assistant"] = true,
    ["Supervisor"] = true,
    ["Assistant Manager"] = true,
    ["Manager"] = true,
    ["General Management"] = true
}

local MainTab = Window:CreateTab("Main", 4483362458)
local PlayerTab = Window:CreateTab("Players", 4483362458)
local SettingsTab = Window:CreateTab("Settings", 4483362458)

local ESPHighlights = {}
local ESPEnabled = false

local function UpdateESP()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            if not ESPHighlights[player] then
                local highlight = Instance.new("Highlight")
                highlight.FillColor = Color3.fromRGB(255, 50, 50)
                highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
                highlight.Parent = player.Character
                ESPHighlights[player] = highlight
            end
            ESPHighlights[player].Enabled = ESPEnabled
        end
    end
end

MainTab:CreateSection("Visuals")

local ESPToggle = MainTab:CreateToggle({
    Name = "Player ESP",
    CurrentValue = false,
    Flag = "ESP_Toggle",
    Callback = function(Value)
        ESPEnabled = Value
        UpdateESP()
    end,
})

local NoClipEnabled = false
local NoClipConnection

local function NoClipLoop()
    if NoClipEnabled and LocalPlayer.Character then
        for _, part in pairs(LocalPlayer.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end
end

MainTab:CreateSection("Movement")

local NoClipToggle = MainTab:CreateToggle({
    Name = "NoClip Mode",
    CurrentValue = false,
    Flag = "NoClip_Toggle",
    Callback = function(Value)
        NoClipEnabled = Value
        if Value then
            NoClipConnection = RunService.Stepped:Connect(NoClipLoop)
        else
            if NoClipConnection then
                NoClipConnection:Disconnect()
            end
        end
    end,
})

local AdminAlertsEnabled = true

local function IsAdmin(player)
    for _, group in pairs(player:GetGroups()) do
        if ADMIN_RANKS[group.Name] then
            return true, group.Name
        end
    end
    return false
end

local function NotifyAdmin(player, rank)
    Rayfield:Notify({
        Title = "⚠ ADMIN DETECTED",
        Content = player.Name .. " (" .. rank .. ") joined the game",
        Duration = 6.5,
        Image = 4483362458,
        Actions = {
            Ignore = {
                Name = "Okay",
                Callback = function()
                    print("User acknowledged admin alert")
                end
            },
        },
    })
end

Players.PlayerAdded:Connect(function(player)
    if AdminAlertsEnabled then
        local isAdmin, rank = IsAdmin(player)
        if isAdmin then
            NotifyAdmin(player, rank)
        end
    end
end)

MainTab:CreateSection("Admin Detection")

local AdminToggle = MainTab:CreateToggle({
    Name = "Admin Alerts",
    CurrentValue = true,
    Flag = "Admin_Toggle",
    Callback = function(Value)
        AdminAlertsEnabled = Value
    end,
})

PlayerTab:CreateSection("Player Inspection")

local function ViewTools(player)
    if not player.Character then 
        Rayfield:Notify({
            Title = "Error",
            Content = "Player has no character",
            Duration = 3
        })
        return 
    end
    
    local tools = {}
    for _, item in pairs(player.Character:GetDescendants()) do
        if item:IsA("Tool") then
            table.insert(tools, item.Name)
        end
    end
    
    if #tools > 0 then
        local toolList = table.concat(tools, "\n• ")
        Rayfield:Notify({
            Title = player.Name .. "'s Tools",
            Content = "• " .. toolList,
            Duration = 8,
            Image = 4483362458
        })
    else
        Rayfield:Notify({
            Title = player.Name,
            Content = "No tools equipped",
            Duration = 3
        })
    end
end

for _, player in pairs(Players:GetPlayers()) do
    if player ~= LocalPlayer then
        PlayerTab:CreateButton({
            Name = "Inspect " .. player.Name,
            Callback = function()
                ViewTools(player)
            end,
        })
    end
end

SettingsTab:CreateSection("Movement")

local WalkSpeedSlider = SettingsTab:CreateSlider({
    Name = "WalkSpeed",
    Range = {16, 300},
    Increment = 1,
    Suffix = "Speed",
    CurrentValue = 16,
    Flag = "WalkSpeed_Slider",
    Callback = function(Value)
        if LocalPlayer.Character then
            LocalPlayer.Character.Humanoid.WalkSpeed = Value
        end
    end,
})

local JumpPowerSlider = SettingsTab:CreateSlider({
    Name = "JumpPower",
    Range = {50, 300},
    Increment = 1,
    Suffix = "Power",
    CurrentValue = 50,
    Flag = "JumpPower_Slider",
    Callback = function(Value)
        if LocalPlayer.Character then
            LocalPlayer.Character.Humanoid.JumpPower = Value
        end
    end,
})

SettingsTab:CreateSection("Miscellaneous")

SettingsTab:CreateToggle({
    Name = "Anti-AFK",
    CurrentValue = true,
    Flag = "AntiAFK_Toggle",
    Callback = function(Value)
        if Value then
            local VirtualUser = game:GetService("VirtualUser")
            LocalPlayer.Idled:Connect(function()
                VirtualUser:Button2Down(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
                task.wait(1)
                VirtualUser:Button2Up(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
            end)
        end
    end,
})

Rayfield:LoadConfiguration()

Players.PlayerAdded:Connect(function(player)
    PlayerTab:CreateButton({
        Name = "Inspect " .. player.Name,
        Callback = function()
            ViewTools(player)
        end,
    })
end)

Players.PlayerRemoving:Connect(function(player)

end)

print("Kohau Radar with Rayfield UI Loaded!")
